---
- include: compat.yml

- include: include_vars.yml

# Install EPEL
- include: epel.yml
  when: ansible_distribution == 'CentOS'

- include: Debian.yml
  when: ansible_os_family == 'Debian'

- include: RedHat.yml
  when: ansible_os_family == 'RedHat'

- include: install_package_names.yml

- include: create_user.yml

- include: untar_kafka.yml

- name: Make logs dir
  sudo: True
  file:
    path: "{{kafka_install_dir}}/logs"
    owner: "{{kafka_user}}"
    state: directory

- name: Make monit dir
  sudo: True
  file:
    path: "{{kafka_monit_conf_dir}}"
    owner: root
    recurse: yes
    state: directory

########## Kafka Brokers

- name: Make pid file
  sudo: True
  with_items: "{{kafka_brokers}}"
  copy:
    content: ""
    dest: "{{kafka_pid_directory}}{%if 'file_basename' in item%}{{item.file_basename}}{%else%}{{kafka_default_file_basename_prefix}}{{item.broker_id}}{%endif%}.pid"
    owner: "{{kafka_user}}"
    force: no

- name: Make log directory
  sudo: True
  file:
    path: "{{kafka_log_directory}}"
    owner: "{{kafka_user}}"
    recurse: yes
    state: directory

- name: Make log file
  sudo: True
  with_items: "{{kafka_brokers}}"
  copy:
    content: ""
    dest: "{{kafka_log_directory}}/{%if 'file_basename' in item%}{{item.file_basename}}{%else%}{{kafka_default_file_basename_prefix}}{{item.broker_id}}{%endif%}.out"
    owner: "{{kafka_user}}"
    force: no

- name: Make topic log directory
  sudo: True
  file:
    path: "{%if 'log_dirs' in item%}{{item.log_dirs}}{%else%}{{kafka_default_topic_log_directory_prefix}}kafka-logs-{{item.broker_id}}{%endif%}"
    owner: "{{kafka_user}}"
    force: no
    recurse: yes
    state: directory
  with_items: "{{kafka_brokers}}"

- name: Install kafka broker server config
  sudo: True
  with_items: "{{kafka_brokers}}"
  template: >
    src=server.properties.j2
    dest={{kafka_install_dir}}/config/{%if 'file_basename' in item%}{{item.file_basename}}{%else%}{{kafka_default_file_basename_prefix}}{{item.broker_id}}{%endif%}.properties
    owner={{kafka_user}}
  notify: restart monit

- name: Install kafka init wrapper
  sudo: True
  with_items: "{{kafka_brokers}}"
  template: >
    src=kafka-init.sh.j2
    dest=/etc/init.d/{%if 'file_basename' in item%}{{item.file_basename}}{%else%}{{kafka_default_file_basename_prefix}}{{item.broker_id}}{%endif%}.sh
    owner=root
    mode=0755

- name: Install monit config for kafka
  sudo: True
  with_items: "{{kafka_brokers}}"
  template: >
    src=kafka.conf.j2
    dest={{kafka_monit_conf_dir}}/{%if 'file_basename' in item%}{{item.file_basename}}{%else%}{{kafka_default_file_basename_prefix}}{{item.broker_id}}{%endif%}.conf
    owner=root
  notify: restart monit
  when: kafka_monit_enabled

- name: Uninstall monit config for kafka
  sudo: True
  with_items: "{{kafka_brokers}}"
  file:
    path: "{{kafka_monit_conf_dir}}/{%if 'file_basename' in item%}{{item.file_basename}}{%else%}{{kafka_default_file_basename_prefix}}{{item.broker_id}}{%endif%}.conf"
    state: absent
  notify: restart monit
  when: not kafka_monit_enabled

- name: Make sure monit is started
  sudo: True
  service: name=monit state=started
  # Does not work in CentOS7 or Fedora in CircleCI
  when: kafka_monit_enabled and (
        not (is_integration_test is defined and is_integration_test and
           (ansible_os_family == "RedHat" or ansible_distribution == "CentOS")))

#- name: Check service
#  sudo: True
#  command: monit summary kafka
#  register: kafka_status
#  changed_when: False
#
#- name: Start service
#  sudo: True
#  command: monit start kafka
#  when: "'Running' not in kafka_status.stdout"
